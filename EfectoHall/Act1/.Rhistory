q()
data_campo <- read.csv('./data.csv')
head(data_campo, 5)
lmCampo = lm(Campo~Corriente, data=dat_campo)
lmCampo = lm(Campo~Corriente, data=data_campo)
summary(lmCampo
)
plot(data_campo, pch=16, col="blue")
abline(lmCampo)
q()
ls()
plot(data_campo)
abline(lmCampo)
print(predict(lmCampo, 0.2)
)
print(predict(lmCampo, [0.2]))
print(predict(lmCampo, c(0.2)))
print(predict(lmCampo, list(0.2)))
clear()
data.Frame(Corriente=0.2)
print(predict(lmCampo, newdata=data.frame(Corriente=0.2)))
q()
predictCampo <- function(corriente) {
return predict(lmCampo, newdata=data.frame(Corriente=corriente))
return (predict(lmCampo, newdata=data.frame(Corriente=corriente)))
ls()
predictCampo <- function(corriente) {
return (predict(lmCampo, newdata=data.frame(Corriente=corriente)))
}
predictCampo(0.2)
ls()
q()
ls()
predictCampo(0.124)
lmCorriente <- lm(Corriente~Campo, data=data_campo)
summary(lmCorriente)
predictCampo <- function(campo) {
return (predict(lmCorriente, newdata=data.frame(Campo=campo)))
}
q()
predictCorriente <- function(campo) {
return (predict(lmCorriente, newdata=data.frame(Campo=campo)))
}
predictCorriente(60.1)
q()
save(lmCampo, lmCorriente, file="linear_regression.R")
q()
ls()
q()
ls()
predictCorriente(200)
q()
ls()
library(tidyverse)
data_campo
ggplot(data_campo, aes(x=Corriente, y=Campo)) + geom_point() + geom_smooth(method="lm") + ggtitle("Campo respecto a Corriente")
ggsave("CampoVsCorriente.png")
q()
