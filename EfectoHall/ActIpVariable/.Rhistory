dataProv <- read.csv("./germanio-p-0-v2.csv")
dataProv
plot(dataProv$Corriente, dataProv$Voltaje_Hall)
plot(dataProv$Corriente, dataProv$Voltaje_Longitudinal)
plot(dataProv$Corriente, dataProv$Voltaje_Hall)
q()
ls()
head(dataProv)
rm(dataProv)
ls
ls()
clear
q()
data_Corriente_Constante <- read.csv("./general.csv")
head(data_Corriente_Constante
)
data_Corriente_Constante$Corriente <- as.factor(data_Corriente_Constante$Corriente)
head(data_Corriente_Constante
)
ggplot(data_Corriente_Constante, aes(x=Corriente_Ip, y=Voltaje_Hall, color=Corriente)) + geom_point() + geom_smoot(method="lm")
library(tidyverse)
ggplot(data_Corriente_Constante, aes(x=Corriente_Ip, y=Voltaje_Hall, color=Corriente)) + geom_point() + geom_smoot(method="lm")
ggplot(data_Corriente_Constante, aes(x=Corriente_Ip, y=Voltaje_Hall, color=Corriente)) + geom_point() + geom_smooth(method="lm")
ggplot(data_Corriente_Constante, aes(x=Corriente_Ip, y=Voltaje_Hall, color=Corriente)) + geom_point() + geom_smooth(method="lm") + facet_wrap(~Tipo)
q()
ls()
ggplot(data_Corriente_Constante, aes(x=Corriente_Ip, y=Voltaje_Hall, color=Corriente)) + geom_point() + geom_smooth(method="lm") + facet_wrap(~Tipo) + labs()
library(tidyverse
ggplot(data_Corriente_Constante, aes(x=Corriente_Ip, y=Voltaje_Hall, color=Corriente)) + geom_point() + geom_smooth(method="lm") + facet_wrap(~Tipo) + labs(title="Voltaje Hall respecto Corriente Ip", x="Corriente Ip (A)", y = "Voltaje Hall (V)") + theme_minimal()
ggplot(data_Corriente_Constante, aes(x=Corriente_Ip, y=Voltaje_Hall, color=Corriente)) + geom_point() + geom_smooth(method="lm") + facet_wrap(~Tipo) + labs(title="Voltaje Hall respecto Corriente Ip", x="Corriente Ip (A)", y = "Voltaje Hall (V)")
data_Corriente_Constante <- read.csv("./general.csv")
data_Corriente_Constante$Corriente <- as.factor(data_Corriente_Constante$Corriente)
ggplot(data_Corriente_Constante, aes(x=Corriente_Ip, y=Voltaje_Hall, color=Corriente)) + geom_point() + geom_smooth(method="lm") + facet_wrap(~Tipo) + labs(title="Voltaje Hall respecto Corriente Ip", x="Corriente Ip (A)", y = "Voltaje Hall (V)")
ggsave("VoltajeHallVsCorriente.png")
q()
coeficientes <- data %>%
  group_by(Tipo, Corriente) %>%
  do(model = lm(Voltaje_Hall ~ Corriente_Ip, data = .)) %>%
  mutate(
    Pendiente = coef(model)[2],
    Intercepto = coef(model)[1],
    R_cuadrado = summary(model)$r.squared
  ) %>%
  select(-model)
library(tidyverse)
coeficientes <- data %>%
  group_by(Tipo, Corriente) %>%
  do(model = lm(Voltaje_Hall ~ Corriente_Ip, data = .)) %>%
  mutate(
    Pendiente = coef(model)[2],
    Intercepto = coef(model)[1],
    R_cuadrado = summary(model)$r.squared
  ) %>%
  select(-model)
coeficientes <- data_Corriente_Constante %>%
  group_by(Tipo, Corriente) %>%
  do(model = lm(Voltaje_Hall ~ Corriente_Ip, data = .)) %>%
  mutate(
    Pendiente = coef(model)[2],
    Intercepto = coef(model)[1],
    R_cuadrado = summary(model)$r.squared
  ) %>%
  select(-model)
print(coeficientes)
ls()
q()
load("./linear_regression.RData")
ls()
predict(lmCampo, newdata=data_Corriente_Constante$Corriente)
predict(lmCampo, newdata=data_Corriente_Constante$Corriente)
predict(lmCampo, newdata=Corriente)
predict(lmCampo, newdata=data_Corriente_Constante)
resultados <- coeficientes_hall %>%
  mutate(
    # Convertir Corriente a numérico para la predicción
    Corriente_num = as.numeric(as.character(Corriente)),
    # Predecir B_z usando la regresión lmCampo
    B_z = predict(lmCampo, newdata = data.frame(Corriente = Corriente_num)),
    # Definir omega
    omega = 1e-3,  # 1×10^{-3} m
    # Calcular R_H
    R_H = (Pendiente_m * omega) / B_z
  )
library(tidyverse)
resultados <- coeficientes_hall %>%
  mutate(
    # Convertir Corriente a numérico para la predicción
    Corriente_num = as.numeric(as.character(Corriente)),
    # Predecir B_z usando la regresión lmCampo
    B_z = predict(lmCampo, newdata = data.frame(Corriente = Corriente_num)),
    # Definir omega
    omega = 1e-3,  # 1×10^{-3} m
    # Calcular R_H
    R_H = (Pendiente_m * omega) / B_z
  )
resultados <- coeficientes %>%
  mutate(
    # Convertir Corriente a numérico para la predicción
    Corriente_num = as.numeric(as.character(Corriente)),
    # Predecir B_z usando la regresión lmCampo
    B_z = predict(lmCampo, newdata = data.frame(Corriente = Corriente_num)),
    # Definir omega
    omega = 1e-3,  # 1×10^{-3} m
    # Calcular R_H
    R_H = (Pendiente_m * omega) / B_z
  )
coeficientes
resultados <- coeficientes %>%
  mutate(
    # Convertir Corriente a numérico para la predicción
    Corriente_num = as.numeric(as.character(Corriente)),
    # Predecir B_z usando la regresión lmCampo
    B_z = predict(lmCampo, newdata = data.frame(Corriente = Corriente_num)),
    # Definir omega
    omega = 1e-3,  # 1×10^{-3} m
    # Calcular R_H
    R_H = (Pendiente * omega) / B_z
  )
resultados
library(kableExtra)
install.packages(kableExtra)
install.packages("kableExtra")
library(kableExtra)
resultados %>%
  select(Tipo, Corriente, Pendiente_m, B_z, R_H) %>%
  kable(format = "latex", 
        digits = 4,
        col.names = c("Tipo", "Corriente (A)", "Pendiente (V/A)", "B_z (T)", "R_H (m³/C)"),
        caption = "Coeficientes de Hall calculados") %>%
  kable_styling(latex_options = c("striped", "hold_position"))
resultados %>%
  select(Tipo, Corriente, Pendiente, B_z, R_H) %>%
  kable(format = "latex", 
        digits = 4,
        col.names = c("Tipo", "Corriente (A)", "Pendiente (V/A)", "B_z (T)", "R_H (m³/C)"),
        caption = "Coeficientes de Hall calculados") %>%
  kable_styling(latex_options = c("striped", "hold_position"))
q()
q()
resultados %>%
  select(Tipo, Corriente, Pendiente_m, B_z, R_H) %>%
  kable(format = "latex",
        digits = 6,
        col.names = c("Tipo", "I (A)", "m (V/A)", "B_z (T)", "R_H (m³/C)"),
        caption = "Coeficiente de Hall R_H calculado") %>%
  kable_styling(latex_options = c("striped", "hold_position")) %>%
  footnote(general = paste("Fórmula: $R_H = \\\\frac{m \\\\times \\\\omega}{B_z}$ con $\\\\omega = 1\\\\times 10^{-3}$ m"))
library(kableExtra)
library(tidyverse)
resultados %>%
  select(Tipo, Corriente, Pendiente_m, B_z, R_H) %>%
  kable(format = "latex", 
        digits = 6,
        col.names = c("Tipo", "Corriente (A)", "Pendiente (V/A)", "B_z (T)", "R_H (m³/C)"),
        caption = "Coeficientes de Hall calculados") %>%
  kable_styling(latex_options = c("striped", "hold_position"))
resultados %>%
  select(Tipo, Corriente, Pendiente, B_z, R_H) %>%
  kable(format = "latex", 
        digits = 6,
        col.names = c("Tipo", "Corriente (A)", "Pendiente (V/A)", "B_z (T)", "R_H (m³/C)"),
        caption = "Coeficientes de Hall calculados") %>%
  kable_styling(latex_options = c("striped", "hold_position"))
ggplot(data, aes(x = Corriente_Ip, y = Voltaje_Hall, color = Corriente)) +
  geom_point(size = 3) +
  geom_smooth(method = "lm", se = TRUE, aes(group = interaction(Tipo, Corriente))) +
  labs(title = "Voltaje Hall vs Corriente Ip",
       x = "Corriente Ip (A)", 
       y = "Voltaje Hall (V)",
       subtitle = paste("Coeficiente de Hall calculado para cada corriente"))
ggplot(data_Corriente_Constante, aes(x = Corriente_Ip, y = Voltaje_Hall, color = Corriente)) +
  geom_point(size = 3) +
  geom_smooth(method = "lm", se = TRUE, aes(group = interaction(Tipo, Corriente))) +
  labs(title = "Voltaje Hall vs Corriente Ip",
       x = "Corriente Ip (A)", 
       y = "Voltaje Hall (V)",
       subtitle = paste("Coeficiente de Hall calculado para cada corriente"))
ggplot(data_Corriente_Constante, aes(x = Corriente_Ip, y = Voltaje_Hall, color = Corriente)) +
  geom_point(size = 3) +
  geom_smooth(method = "lm", se = TRUE, aes(group = interaction(Tipo, Corriente))) +
  labs(title = "Voltaje Hall vs Corriente Ip",
       x = "Corriente Ip (A)", 
       y = "Voltaje Hall (V)",
       subtitle = paste("Coeficiente de Hall calculado para cada corriente"))
resultados_validos <- resultados %>%
  filter(is.finite(R_H), is.finite(B_z), !is.na(R_H), !is.na(B_z))
ggplot(resultados_validos, aes(x = B_z, y = R_H, color = Tipo, shape = Corriente)) +
  geom_point(size = 4) +
  geom_line(aes(group = Tipo), alpha = 0.7) +
  labs(
    title = "Coeficiente de Hall vs Campo Magnético",
    x = "Campo Magnético B_z (T)",
    y = "Coeficiente de Hall R_H (m³/C)",
    color = "Tipo de material",
    shape = "Corriente (A)"
  ) +
  theme_minimal() +
  theme(
    legend.position = "bottom",
    plot.title = element_text(hjust = 0.5)
  )
ggplot(resultados_validos, aes(x = B_z, y = R_H, color = Tipo, shape = Corriente)) +
  geom_point(size = 4) +
  geom_line(aes(group = Tipo), alpha = 0.7) +
  labs(
    title = "Coeficiente de Hall vs Campo Magnético",
    x = "Campo Magnético B_z (T)",
    y = "Coeficiente de Hall R_H (m³/C)",
    color = "Tipo de material",
    shape = "Corriente (A)"
  )
ggplot(resultados_validos, aes(x = B_z, y = R_H, color = Tipo, shape = Corriente)) +
  geom_point(size = 4) +
  geom_line(aes(group = Tipo), alpha = 0.7) +
  labs(
    title = "Coeficiente de Hall vs Campo Magnético",
    x = "Campo Magnético B_z (T)",
    y = "Coeficiente de Hall R_H (m³/C)",
    color = "Tipo de material",
    shape = "Corriente (A)"
  ) + facet_wrap(~Tipo)
q().
q()
